library(move)
library(tidyverse)
library(lubridate)
library(ggmap)
library(scales)
library(dplyr)
library(lme4)
load(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/data/Phyllostomus_HMMbehaviors.RData")
# change name of data frame
allbats_Bocas <- bats_behaviors
#check at tracking data again!
lapply(split(allbats_Bocas, allbats_Bocas$ID), function(x){
ggplot(aes(x=location_long, y=location_lat), data=x)+geom_point()+
ggtitle(x$ID)
})
# add columns with the coordinate of the caves
allbats_Bocas$location_lat_cave <- NA
allbats_Bocas$location_long_cave <- NA
allbats_Bocas$location_lat_cave[which(allbats_Bocas$cave=="lagruta")] <- 9.396448
allbats_Bocas$location_long_cave[which(allbats_Bocas$cave=="lagruta")] <- -82.271541
allbats_Bocas$location_lat_cave[which(allbats_Bocas$cave=="ajcave")] <- 9.440312
allbats_Bocas$location_long_cave[which(allbats_Bocas$cave=="ajcave")] <- -82.274955
allbats_Bocas$location_lat_cave[which(allbats_Bocas$cave=="muddycave")] <- 9.387233
allbats_Bocas$location_long_cave[which(allbats_Bocas$cave=="muddycave")] <- -82.264753
unique(allbats_Bocas$tag_local_identifier)
# calculate point euclidean distance from the cave all the points. Gives the distance in meters
allbats_Bocas$distanceFromCave <- pointDistance(allbats_Bocas[,c("location_long","location_lat")], allbats_Bocas[,c("location_long_cave", "location_lat_cave")], lonlat = T)
# extract maximum distance
maxdist <-aggregate(distanceFromCave~ID_batday+tag_local_identifier+year_cave+cave, allbats_Bocas, FUN=max)
# convert distnace in meters to Km
maxdist$maxkm <- maxdist$distanceFromCave/1000
# need to check which ones do I leave
maxdist[which(maxdist$maxkm<2),]
# remove some distances which might not be accurate since the individuals did not travel much and there are few points
maxdist_c <- maxdist %>%
filter(ID_batday!="74F9F83_3", ID_batday!="38500337_C_1",ID_batday!="0C506E35_C_1",ID_batday!="0C506E35_C_2",ID_batday!="0D501435_C_1", ID_batday!="74DA035_1", ID_batday!="74DC454_1", ID_batday!="74DDA80_2", ID_batday!="74DDFB1_1", ID_batday!="74FE24E_3", ID_batday!="PH_TS_018_7")
# make a summary table per individual
maxNSD_df_id <- maxdist_c %>%
group_by(tag_local_identifier, year_cave, cave) %>%
dplyr::summarise(mean_dist=mean(maxkm), sd=sd(maxkm))
table(maxNSD_df_id$year_cave)
maxNSD_df_id$sex <- allbats_Bocas$sex[match(maxNSD_df_id$tag_local_identifier, allbats_Bocas$tag_local_identifier)]
#summary of number of individuals used by sex
table(maxNSD_df_id$year_cave, maxNSD_df_id$sex)
# number individuals to the summary table
# p <- as.data.frame(table(maxNSD_df_id$year_cave,maxNSD_df_id$tag_local_identifier))
# l <- count(p$Var1[which(p$Freq>0)])
# summary table per cave
maxddist_cave <- maxdist_c %>%
group_by(year_cave) %>%
dplyr::summarise(mean_dist=mean(maxkm), sd=sd(maxkm))
hist(maxNSD_df_id$mean_dist)
glmer(mean_dist~year_cave+ (1|), data=maxNSD_df_id, family=Gamma(link = "inverse"))
View(maxNSD_df_id)
glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "inverse"))
glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "identity"))
glm(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "identity"))
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "identity"))
anova(m1)
library(broom.mixed) ###Other p-values (not global)
install.packages("broom.mixed")
library(broom.mixed) ###Other p-values (not global)
tidy(m1,conf.int=TRUE,exponentiate=TRUE,effects="ran_vals")
summary(m1)
car::Anova(m1)
car::Anova(m1, type=3)
## Test distance with non-parametric test
useful website
# Post-hoc analysis
library (multcomp)
summary(glht(m1, mcp(Sound="Tukey")))
summary(glht(m1, mcp(year_cave="Tukey")))
summary(m1)
summary(glht(m1, mcp(year_cave="Tukey")))
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id))
hist(maxNSD_df_id$mean_dist)
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=gaussian(link = "identity"))
-(maxNSD_df_id$mean_dist)
hist(-(maxNSD_df_id$mean_dist))
maxNSD_df_id$dist_transf <- hist(-(maxNSD_df_id$mean_dist))
maxNSD_df_id$dist_transf <- -(maxNSD_df_id$mean_dist))
maxNSD_df_id$dist_transf <- -(maxNSD_df_id$mean_dist)
maxNSD_df_id$dist_transf
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "identity"))
summary(m1)
m1 <- glmer(dist_transf~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "identity"))
hist(-(maxNSD_df_id$mean_dist))
hist(maxNSD_df_id$mean_dist)
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=gaussian(link = "logit"))
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=gaussian(link = "link"))
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=gaussian(link = "inverse"))
summary(m1)
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "inverse"))
summary(m1)
hist(log(maxNSD_df_id$mean_dist))
hist(exp((maxNSD_df_id$mean_dist))
hist(-(maxNSD_df_id$mean_dist))
hist(-(maxNSD_df_id$mean_dist))
maxNSD_df_id$dist_transf<- -1*maxNSD_df_id$mean_dist
maxNSD_df_id$dist_transf
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=gaussian(link = "log"))
summary(m1)
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=gaussian(link = "log"), control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "identity"), control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
m1 <- glmer(dist_transf~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "identity"), control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
m1 <- glmer(dist_transf~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=gaussian(link = "identity"), control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
m1 <- glmer(dist_transf~year_cave + (1|tag_local_identifier), data=maxNSD_df_id, family=gaussian(link = "log"), control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "idenity"))
m1 <- glmer(mean_dist~year_cave+ (1|tag_local_identifier), data=maxNSD_df_id, family=Gamma(link = "identity"))
summary(m1)
# Post-hoc analysis
library (multcomp)
summary(glht(m1, mcp(year_cave="Tukey")))
library(ggplot2)
library(ggnewscale)
library(ggspatial)
library(magick)
library(ggmap)
library(ggsn)
library(patchwork)
library(gridExtra)
library(tidyverse)
library(lubridate)
library(dplyr)
library(scales)
load(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/data/Phyllostomus_HMMbehaviors.RData")
names(bats_behaviors)
# add season variable
bats_behaviors$season <- "dry"
bats_behaviors$season[which(bats_behaviors$year_cave=="2023_lagruta" | bats_behaviors$year_cave=="2023_ajcave"| bats_behaviors$year_cave== "2021_lagruta")] <- "wet"
unique(bats_behaviors$season)
# plot using stamen map from Bocas
register_stadiamaps("3a58670b-0653-4668-bb0c-f9e5454596e7")
# create a bounding box
e <- make_bbox(location_long, location_lat, data = bats_behaviors)
# make a data frame with the locations of the colonies
colonies <- data.frame(colonies=c("lagruta", "ajcave", "muddycave"), location_lat=c( 9.396448,9.440312, 9.387233), location_long=c(-82.271541, -82.274955, -82.264753))
# filter colony 1
lagrutadf <- bats_behaviors %>%
filter(cave=="lagruta")
# plot
plot_la <- get_stadiamap(e, zoom = 12, maptype = "stamen_toner_lite") %>% ggmap()+
coord_sf(crs = "+proj=lonlat") +
geom_path(data=lagrutadf, aes(x=location_long, y=location_lat, col=season, linetype=season, alpha=season, group=ID_batday), size=2)+
scale_color_manual(values=c( "#21918c", "#5ec962"))+ #440154#9933CC
scale_alpha_discrete(range=c(0.2, 1))+
new_scale_color() +
geom_point(data=colonies[colonies$colonies=="lagruta",], aes(x=location_long, y=location_lat, shape=colonies, size=5, fill=colonies, color=colonies))+
scale_shape_manual(values = c(21))+
scale_color_manual(values = c("black"))+
scale_fill_manual(values = alpha(c("black")))+
scalebar(location = "bottomleft",  x.min =-82.4, x.max = -82.54,
y.min = 9.23, y.max = 9.26, dist = 10, height = 0.2, transform = TRUE, model = "WGS84", dist_unit = "km", nudge_y= -0.01)+guides(color = "none", size="none")+
theme_linedraw()+
theme(legend.position = "none",
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
plot.title= element_text(size = 20))+
xlab("")+
ylab("")
plot_la
# filert colony 2
ajdf <- bats_behaviors %>%
filter(cave=="ajcave")
# plot
plot_aj <- get_stadiamap(e, zoom = 12, maptype = "stamen_toner_lite") %>% ggmap()+
coord_sf(crs = "+proj=lonlat")+
geom_path(data=ajdf, aes(x=location_long, y=location_lat, col=season, linetype=season, alpha=season, group=ID_batday), size=2)+
scale_color_manual(values=c("#440154", "#3b528b"))+ #"#33CC33","#339900"
scale_alpha_discrete(range=c(0.3, 1))+
new_scale_color() +
geom_point(data=colonies[colonies$colonies=="ajcave",], aes(x=location_long, y=location_lat, shape=colonies, size=5, fill=colonies, color=colonies))+
scale_shape_manual(values = c(22))+
scale_color_manual(values = c("black"))+
scale_fill_manual(values = alpha(c("black")))+
scalebar(location = "bottomleft",  x.min =-82.4, x.max = -82.54,
y.min = 9.23, y.max = 9.26, dist = 10, height = 0.2, transform = TRUE, model = "WGS84", dist_unit = "km", nudge_y= -0.01)+guides(color = "none", size="none")+
theme_linedraw()+
theme(legend.position = "none",
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
plot.title= element_text(size = 20))
plot_aj
# filter colony 3
muddydf <- bats_behaviors %>%
filter(cave=="muddycave")
# plot
plot_muddy <- get_stadiamap(e, zoom = 12, maptype = "stamen_toner_lite") %>% ggmap()+
coord_sf(crs = "+proj=lonlat")+
geom_path(data=muddydf, aes(x=location_long, y=location_lat, col=cave, linetype=season, group=ID_batday), size=2)+
scale_color_manual(values=c("#fde725"))+#FF9933
#scale_alpha_discrete(range=c(0.4, 1))+
new_scale_color() +
geom_point(data=colonies[colonies$colonies=="muddycave",], aes(x=location_long, y=location_lat, shape=colonies, size=5, fill=colonies, color=colonies))+
scale_shape_manual(values = c(24))+
scale_color_manual(values = c("black"))+
scale_fill_manual(values = alpha(c("black")))+
scalebar(location = "bottomleft",  x.min =-82.4, x.max = -82.54,
y.min = 9.23, y.max = 9.26, dist = 10, height = 0.2, transform = TRUE, model = "WGS84", dist_unit = "km", nudge_y= -0.01)+guides(color = "none", size="none")+
theme_linedraw()+
theme(legend.position = "none",
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
plot.title= element_text(size = 20))+
ylab("")
plot_muddy
# plotting panama and box around it
bbox_panama <- c(left = -83, bottom = 6, right = -77, top = 10)
# inset map
inset <- get_stadiamap(bbox_panama, zoom = 8, maptype = "stamen_toner_lite") %>% ggmap()+
geom_rect(aes(xmin = -82.550092, xmax = -82.155892, ymin = 9.203091, ymax = 9.478718), color = "red", fill = NA)+
xlab("")+
theme_linedraw()+
coord_sf(crs = "+proj=lonlat")
inset
# combine figure 1 with inset
main_map <- ((inset + plot_la + plot_aj + plot_muddy) + plot_annotation(tag_levels = "A") &
theme(plot.tag  = element_text(face = 'bold', size=24), axis.title = element_text(face = 'bold', size=24), axis.title.x = element_text(size = 24), axis.title.y=element_text(size=24), axis.text.y = element_text(size=14), axis.text.x = element_text(size=14)))
main_map
# save map
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/Fig1.pdf", width=10, height = 5, dpi=300, compression = "lzw")
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/Fig1.pdf", width=10, height = 5, dpi=300)
# save map
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/Fig1.pdf", width=8.5, height = 11, dpi=300)
# save map
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/Fig1.pdf", width=20, height = 15, dpi=300)
# save map
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/Fig1.pdf", width=15, height = 10, dpi=300)
# save map
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/Fig1.pdf", width=20, height = 15, dpi=300)
library(ggplot2)
library(patchwork)
library(ggmap)
library(tidyverse)
library(ggnewscale)
library(ggsn)
load(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/data/Phyllostomus_HMMbehaviors.RData")
# select bats in Bocas march 2022 with area switching
bats <- bats_behaviors %>%
filter(tag_local_identifier=="PH_TS_046"| tag_local_identifier=="PH_TS_039")%>%
filter(ID!="PH_TS_039_2022-03-16")
bats_aj_2023 <- bats_behaviors %>%
filter(tag_local_identifier=="PHYL9" |tag_local_identifier=="PHYL27"|tag_local_identifier=="PHYL28")
# make a data frame with the locations of the colonies
colonies <- data.frame(colonies=c("lagruta", "ajcave"), location_lat=c( 9.396448,9.440312), location_long=c(-82.271541, -82.274955))
# plot using stamen map from Bocas
register_stadiamaps("3a58670b-0653-4668-bb0c-f9e5454596e7")
#create a bounding box
e <- make_bbox(location_long, location_lat, data = bats_behaviors)
# plot colony 1 switching
gruta_switching  <- get_stadiamap(e, zoom = 13, maptype = "stamen_toner_lite") %>% ggmap()+
geom_path(aes(x=location_long, y=location_lat, color=as.factor(date)),data=bats)+
labs(color="date")+
new_scale_color()+
new_scale_fill()+
geom_point(data=colonies[colonies$colonies=="lagruta",], aes(x=location_long, y=location_lat, shape=colonies, size=5, fill=colonies, color=colonies))+
scale_shape_manual(values = c(21), guide="none")+
scale_color_manual(values = "black", guide="none")+
scale_fill_manual(values = alpha("black", 0.6), guide="none")+
theme_bw()+
#coord_sf(crs = st_crs(4326))+
scalebar(location = "bottomleft",  x.min =-82.4, x.max = -82.54,
y.min = 9.23, y.max = 9.26, dist = 10, height = 0.05, transform = TRUE, model = "WGS84", dist_unit = "km", nudge_y= -0.01)+guides(color = "none", size="none")+
guides(color = "none", size="none", alpha="none", fill="none")+
facet_wrap(.~tag_local_identifier, nrow=2)+
theme(legend.position="bottom")+
theme_linedraw()+
theme(legend.position="none",
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 24),
axis.title.y = element_text(size = 24),
strip.text = element_blank())
gruta_switching
# plot colony 2 switching
ajcave_switching <- get_stadiamap(e, zoom = 13, maptype = "stamen_toner_lite") %>% ggmap()+
geom_path(aes(x=location_long, y=location_lat, color=as.factor(date)),data=bats_aj_2023)+
labs(color="date")+
new_scale_color()+
new_scale_fill()+
geom_point(data=colonies[colonies$colonies=="ajcave",], aes(x=location_long, y=location_lat, shape=colonies, size=5, fill=colonies, color=colonies))+
scale_shape_manual(values = c(22), guide="none")+
scale_color_manual(values = "black", guide="none")+
scale_fill_manual(values = alpha("black", 0.6), guide="none")+
theme_bw()+
#coord_sf(crs = st_crs(4326))+
scalebar(location = "bottomleft",  x.min =-82.4, x.max = -82.54,
y.min = 9.23, y.max = 9.26, dist = 10, height = 0.05, transform = TRUE, model = "WGS84", dist_unit = "km", nudge_y= -0.01)+guides(color = "none", size="none")+
guides(color = "none", size="none", alpha="none", fill="none")+
facet_wrap(.~tag_local_identifier, nrow=3)+
theme_linedraw()+
theme(legend.position="none",
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 24),
axis.title.y = element_text(size = 24),
strip.text = element_blank())
ajcave_switching
# compile plots for figure S2
((gruta_switching | ajcave_switching) + plot_layout(axis_titles = "collect")+ plot_annotation(tag_levels = "A") &
theme(plot.tag  = element_text(face = 'bold', size=24), axis.title = element_text(face = 'bold', size=24), axis.title.x = element_text(size = 24), axis.title.y=element_text(size=24), axis.text.x=element_text(size=18, angle = 45, vjust = 0.9, hjust=1), axis.text.y=element_text(size=18)))
# save figure
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/FigS2.pdf", dpi=300)
# save figure
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/FigS2.pdf", width=15, height = 10, dpi=300)
# save figure
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/FigS2.pdf", width=8, height = 11, dpi=300)
# save figure
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/FigS2.pdf", width=15, height = 10, dpi=300)
library(move)
library(tidyverse)
library(lubridate)
library(ggmap)
library(scales)
library(dplyr)
library(lme4)
load(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/data/Phyllostomus_HMMbehaviors.RData")
# change name of data frame
allbats_Bocas <- bats_behaviors
#check at tracking data again!
lapply(split(allbats_Bocas, allbats_Bocas$ID), function(x){
ggplot(aes(x=location_long, y=location_lat), data=x)+geom_point()+
ggtitle(x$ID)
})
# change name of data frame
allbats_Bocas <- bats_behaviors
# split data frame by ID
allbats_Bocas_sp <- split(allbats_Bocas, allbats_Bocas$ID)
# split data frame by ID
allbats_Bocas_sp <- split(allbats_Bocas, allbats_Bocas$ID)
# remove some id-days
hastMorph_com_clean <- allbats_Bocas_sp[names(allbats_Bocas_sp) %in% c("74F8E19_2016-03-07", "0D501435_C_2021-12-09","0D501435_C_2021-12-10", "0D501435_C_2021-12-11", "38506D37_C_2021-12-10", "38506D37_C_2021-12-11","38500337_C_2021-12-09", "0C506E35_C_2021-12-10" , "0C506E35_C_2021-12-11") == FALSE]
# remove some id-days
hastMorph_com_clean <- allbats_Bocas_sp[names(allbats_Bocas_sp) %in% c("74F8E19_2016-03-07", "0D501435_C_2021-12-09","0D501435_C_2021-12-10", "0D501435_C_2021-12-11", "38506D37_C_2021-12-10", "38506D37_C_2021-12-11","38500337_C_2021-12-09", "0C506E35_C_2021-12-10" , "0C506E35_C_2021-12-11") == FALSE]
# remove some id-days
hastMorph_com_final <- allbats_Bocas_sp[names(allbats_Bocas_sp) %in% c("2016030703_2016-03-09", "71A0D95_2016-03-08", "71A111A_2016-03-10", "74DA92F_2016-03-01", "74DCA83_2016-02-29","74DCBCC_2016-03-04", "74DE9A7_2016-03-08","74F8E19_2016-03-04", "74F8E19_2016-03-05","74F9F83_2016-03-04","74F9F83_2016-03-05", "74F9F83_2016-03-07", "0C506E35_C_2021-12-12", "22507B4E_D_2022-02-02", "22507B4E_D_2022-02-03", "23506B4E_G_2022-01-31", "23506B4E_G_2022-02-01", "23506B4E_G_2022-02-02", "23506B4E_G_2022-02-03", "23506B4E_G_2022-02-04", "23506B4E_G_2022-02-05", "23506B4E_G_2022-02-06", "23506B4E_G_2022-02-07", "23506B4E_G_2022-02-08", "23506B4E_G_2022-02-09", "23506B4E_G_2022-02-10", "2C500235_D_2022-02-01", "2C500235_D_2022-02-02", "2C500235_D_2022-02-03", "2C500235_D_2022-02-04", "2C500235_D_2022-02-05", "2C500235_D_2022-02-06", "2C500235_D_2022-02-07", "2C500235_D_2022-02-08", "2C500235_D_2022-02-09", "2C500235_D_2022-02-10", "2C500235_D_2022-02-11", "2C500235_D_2022-02-12", "2C501A35_G_2022-01-31", "2C501A35_G_2022-02-01", "2C501A35_G_2022-02-02", "2C501A35_G_2022-02-03", "2C507735_G_2022-01-31", "2C507735_G_2022-02-01", "2C507735_G_2022-02-02", "2C507735_G_2022-02-03", "2C507735_G_2022-02-04", "2C507735_G_2022-02-05", "2C507735_G_2022-02-06", "2C507735_G_2022-02-07", "2C507735_G_2022-02-08", "2C507735_G_2022-02-09", "2C507735_G_2022-02-10", "2D507235_G_2022-02-01", "2D507235_G_2022-02-02", "2D507235_G_2022-02-03", "2D507235_G_2022-02-04", "2D507235_G_2022-02-05", "2D507235_G_2022-02-06", "2D507235_G_2022-02-07", "2D507235_G_2022-02-08", "2D507235_G_2022-02-09", "2D507235_G_2022-02-10", "2E500235_G_2022-02-01", "2E500235_G_2022-02-02", "2E500235_G_2022-02-03", "2E500235_G_2022-02-04", "2E500235_G_2022-02-05", "2E500235_G_2022-02-06", "2E500235_G_2022-02-07", "2E500235_G_2022-02-08", "2E500235_G_2022-02-09", "2E500235_G_2022-02-10", "31507235_G_2022-01-31", "31507235_G_2022-02-01", "31507235_G_2022-02-02", "31507235_G_2022-02-03", "37506237_D_2022-02-01", "37506237_D_2022-02-02", "37506237_D_2022-02-03", "37506237_D_2022-02-04", "37506237_D_2022-02-05", "37506237_D_2022-02-06", "37506237_D_2022-02-07", "37507537_D_2022-02-02", "37507537_D_2022-02-03", "37507537_D_2022-02-04", "37507537_D_2022-02-05", "37507537_D_2022-02-06", "37507537_D_2022-02-07", "37507537_D_2022-02-08", "37507537_D_2022-02-09", "37507537_D_2022-02-10", "37507537_D_2022-02-11", "37507537_D_2022-02-12", "37507537_D_2022-02-13", "38500437_D_2022-02-01", "38500437_D_2022-02-02", "38506737_G_2022-01-31", "38506737_G_2022-02-01", "38506737_G_2022-02-02", "38506737_G_2022-02-03", "38506737_G_2022-02-04", "38506737_G_2022-02-05", "38506D37_D_2022-02-01", "38506D37_D_2022-02-02", "39500E37_D_2022-02-03", "39500E37_D_2022-02-04", "39500E37_D_2022-02-05", "39500E37_D_2022-02-06", "39500E37_D_2022-02-07", "39500E37_D_2022-02-08", "39500E37_D_2022-02-09", "39500E37_D_2022-02-10", "39500E37_D_2022-02-11", "39500E37_D_2022-02-12", "39500E37_D_2022-02-13", "39500E37_D_2022-02-14", "39506037_G_2022-01-31", "39506037_G_2022-02-01", "39506037_G_2022-02-02", "39506037_G_2022-02-03", "39506037_G_2022-02-04", "39506037_G_2022-02-05", "39506037_G_2022-02-06", "39506037_G_2022-02-07", "39506037_G_2022-02-08", "39506037_G_2022-02-09", "39506037_G_2022-02-10", "53506935_G_2022-01-31", "53506935_G_2022-02-01", "PH_TS_018_2022-03-08",  "PH_TS_018_2022-03-10", "PH_TS_039_2022-03-08", "PH_TS_039_2022-03-09", "PH_TS_046_2022-03-08", "PH_TS_046_2022-03-09", "PH_TS_056_2022-03-08",  "PH_TS_072_2022-03-12", "PH_TS_072_2022-03-16", "PH_TS_072_2022-03-19", "PH_TS_072_2022-03-20", "PH_TS_081_2022-03-08", "PH_TS_081_2022-03-09", "PH_TS_096_2022-03-10", "PH_TS_096_2022-03-11",  "PH_TS_011_2022-03-08", "PH_TS_011_2022-03-12", "PH_TS_011_2022-03-15", "PH_TS_011_2022-03-17", "PH_TS_014_2022-03-07", "PH_TS_014_2022-03-08",  "PH_TS_014_2022-03-09", "PH_TS_014_2022-03-10", "PH_TS_016_2022-03-09", "PH_TS_016_2022-03-10", "PH_TS_074_2022-03-08", "PH_TS_074_2022-03-10", "PH_TS_074_2022-03-12", "PH_TS_079_2022-03-07", "PH_TS_079_2022-03-16", "PH_TS_080_2022-03-09", "PH_TS_080_2022-03-10") == TRUE]
# remove some id-days
hastMorph_com_final2 <- allbats_Bocas_sp[names(allbats_Bocas_sp) %in%  c("PH_TS_103_2022-03-09", "PH_TS_103_2022-03-17","PH_TS_029_2022-03-08","PH_TS_029_2022-03-09", "PH_TS_029_2022-03-12", "PH_TS_029_2022-03-13", "PH_TS_029_2022-03-14", "PH_TS_029_2022-03-15","PH_TS_029_2022-03-16","PH_TS_029_2022-03-17", "PH_TS_029_2022-03-18", "PH_TS_029_2022-03-19", "PH_TS_080_2022-03-11", "PH_TS_080_2022-03-14", "PH_TS_080_2022-03-15" , "PH_TS_080_2022-03-16","PH_TS_080_2022-03-17", "PH_TS_080_2022-03-18", "PH_TS_080_2022-03-19", "PH_TS_080_2022-03-20", "PH_TS_080_2022-03-21", "PH_TS_100_2022-03-07", "PH_TS_100_2022-03-10", "PH_TS_100_2022-03-11", "PH_TS_100_2022-03-16", "PH_TS_100_2022-03-17", "PH_TS_100_2022-03-18", "PH_TS_112_2022-03-08", "PH_TS_112_2022-03-11", "PH_TS_113_2022-03-09","PH_TS_113_2022-03-12", "PH_TS_120_2022-03-08", "PH_TS_120_2022-03-11", "PHYL1_2023-08-13", "PHYL1_2023-08-14", "PHYL1_2023-08-15", "PHYL1_2023-08-17", "PHYL11_2023-08-15", "PHYL11_2023-08-16", "PHYL11_2023-08-17", "PHYL11_2023-08-18", "PHYL16_2023-08-14", "PHYL16_2023-08-15",  "PHYL21_2023-08-18", "PHYL24_2023-08-15", "PHYL21_2023-08-17", "PHYL25_2023-08-14", "PHYL25_2023-08-15", "PHYL25_2023-08-16", "PHYL25_2023-08-17", "PHYL25_2023-08-18", "PHYL27_2023-08-15", "PHYL28_2023-08-14", "PHYL28_2023-08-15", "PHYL34_2023-08-13", "PHYL34_2023-08-14","PHYL35_2023-08-14",  "PHYL38_2023-08-12", "PHYL38_2023-08-14","PHYL39_2023-08-14", "PHYL4_2023-08-14", "PHYL7_2023-08-16", "PHYL7_2023-08-16","PHYL7_2023-08-17", "PHYL7_2023-08-18","PHYL9_2023-08-14","PHYL9_2023-08-15", "PHYL9_2023-08-17", "PHYL9_2023-08-18") == TRUE]
# convert list to data frame
allbats_Bocas_clean2 <- c(hastMorph_com_final,hastMorph_com_final2)
allbats_Bocas_final_df <- do.call(rbind,allbats_Bocas_clean2)
allbats_Bocas_final_df <- do.call(rbind,allbats_Bocas_clean2)
# remove one individual from 2021
allbats_Bocas_final_df <- allbats_Bocas_final_df %>%
filter(tag_local_identifier!="0C506E35_C")
#check dates
unique(allbats_Bocas_final_df$date)
#check dates
unique(allbats_Bocas_final_df$date)
unique(allbats_Bocas_final_df$tag_local_identifier)
# for foraging points which have tlag larger than 1800 sec (30 minutes), because the bat was at the cave, and the gps did not record. We will assign a tlag of 190
allbats_Bocas_final_df$tlag[which(allbats_Bocas_final_df$behav=="foraging" & allbats_Bocas_final_df$tlag>1800)] <- 190
allbats_Bocas_final_df <- allbats_Bocas_final_df[!c(allbats_Bocas_final_df$behav=="commuting" & allbats_Bocas_final_df$tlag>1800),]
# add seasons
allbats_Bocas_final_df$seasons <- "dry"
#filter only foraging
foraging <- allbats_Bocas_final_df %>%
filter(behav=="foraging")
# set coordinates of middle of the roost
roostlagruta <- data.frame(location.lat=9.396448, location.long=-82.271541)
# selecting foraging points based on the radios by taking la gruta = colony 1 as a reference point
roostpointGruta <- points_in_circle(foraging, roostlagruta$location.long,roostlagruta$location.lat, radius = 6500, lon=location_long,lat=location_lat)
# assign position to foraging points
foraging$position <- "off island"
# convert list to data frame
allbats_Bocas_clean2 <- c(hastMorph_com_final,hastMorph_com_final2)
allbats_Bocas_final_df <- do.call(rbind,allbats_Bocas_clean2)
allbats_Bocas_final_df <- do.call(rbind,allbats_Bocas_clean2)
# remove one individual from 2021
allbats_Bocas_final_df <- allbats_Bocas_final_df %>%
filter(tag_local_identifier!="0C506E35_C")
#check dates
unique(allbats_Bocas_final_df$date)
#check dates
unique(allbats_Bocas_final_df$date)
unique(allbats_Bocas_final_df$tag_local_identifier)
# for foraging points which have tlag larger than 1800 sec (30 minutes), because the bat was at the cave, and the gps did not record. We will assign a tlag of 190
allbats_Bocas_final_df$tlag[which(allbats_Bocas_final_df$behav=="foraging" & allbats_Bocas_final_df$tlag>1800)] <- 190
allbats_Bocas_final_df <- allbats_Bocas_final_df[!c(allbats_Bocas_final_df$behav=="commuting" & allbats_Bocas_final_df$tlag>1800),]
# add seasons
allbats_Bocas_final_df$seasons <- "dry"
allbats_Bocas_final_df$seasons[which(allbats_Bocas_final_df$year_cave=="2023_lagruta" |  allbats_Bocas_final_df$year_cave=="2023_ajcave")] <- "wet"
#filter only foraging
foraging <- allbats_Bocas_final_df %>%
filter(behav=="foraging")
library(spatialrisk)
library(spatialrisk)
# set coordinates of middle of the roost
roostlagruta <- data.frame(location.lat=9.396448, location.long=-82.271541)
# selecting foraging points based on the radios by taking la gruta = colony 1 as a reference point
roostpointGruta <- points_in_circle(foraging, roostlagruta$location.long,roostlagruta$location.lat, radius = 6500, lon=location_long,lat=location_lat)
# assign position to foraging points
foraging$position <- "off island"
foraging$position[which(foraging$event_id %in% roostpointGruta$event_id)] <- "on island"
# plot to see if classification was done right
ggplot(data=foraging, aes(x=location_long, y=location_lat, color=position))+geom_point()
# total summary of foraging at night
all_forging <-  foraging %>%
group_by(ID_batday, year_cave, cave)%>%
dplyr::summarise(totaltime=sum(tlag, na.rm = TRUE)/60)
# join two tables by id_day
foraging_in_out <- foraging_in_out %>%
left_join(all_forging, by = 'ID_batday')
library(spatialrisk)
# set coordinates of middle of the roost
roostlagruta <- data.frame(location.lat=9.396448, location.long=-82.271541)
# selecting foraging points based on the radios by taking la gruta = colony 1 as a reference point
roostpointGruta <- points_in_circle(foraging, roostlagruta$location.long,roostlagruta$location.lat, radius = 6500, lon=location_long,lat=location_lat)
# assign position to foraging points
foraging$position <- "off island"
foraging$position[which(foraging$event_id %in% roostpointGruta$event_id)] <- "on island"
# plot to see if classification was done right
ggplot(data=foraging, aes(x=location_long, y=location_lat, color=position))+geom_point()
# summary by foraging on and off the island
foraging_in_out <- foraging %>%
group_by(tag_local_identifier, ID_batday, year_cave, cave, position, sex, seasons)%>%
dplyr::summarise(fortime=sum(tlag, na.rm = TRUE)/60)
# total summary of foraging at night
all_forging <-  foraging %>%
group_by(ID_batday, year_cave, cave)%>%
dplyr::summarise(totaltime=sum(tlag, na.rm = TRUE)/60)
# join two tables by id_day
foraging_in_out <- foraging_in_out %>%
left_join(all_forging, by = 'ID_batday')
# add proportion of time
foraging_in_out <- foraging_in_out%>%
mutate(prop.time=fortime/totaltime)
# number individuals to the summary table
a <- as.data.frame(table(foraging_in_out$year_cave.x,foraging_in_out$tag_local_identifier))
b <- count(a$Var1[which(a$Freq>0)])
#number of bat foraging on island
foraging_in <- foraging_in_out %>%
filter(position=="on island")
unique(foraging_in$tag_local_identifier)# 48 bats
# summary table of foraging time
library(Rmisc)
sum_for_time_cave <-  summarySE(foraging_in_out, measurevar="fortime", groupvars=c("cave.x","position","seasons"))
sum_for_time_group <-  summarySE(foraging_in_out, measurevar="fortime", groupvars=c("year_cave.x","position","seasons"))
# summary table of proportion of foraging
sum_for_prop_cave <-  summarySE(foraging_in_out, measurevar="prop.time", groupvars=c("cave.x","position","seasons"))
sum_for_prop <-  summarySE(foraging_in_out, measurevar="prop.time", groupvars=c("year_cave.x","position","seasons"))
# convert cave_group as factor with defined labels
sum_for_prop$cave_group_f <- factor(sum_for_prop$year_cave.x, levels = c("2016_lagruta", "2022_lagruta_Feb", "2022_lagruta_Mar", "2022_ajcave","2022_muddycave",  "2023_lagruta", "2023_ajcave"), labels=c("colony 1 2016",  "colony 1 early 2022 ", "colony 1 late 2022","colony 2 2022", "colony 3 2022", "colony 1 2023", "colony 2 2023"))
library(scales)
# plot time of foraging on and off the island
inout_plot <- ggplot(data=sum_for_prop, aes(x=cave_group_f, y=prop.time, color=position))+
geom_errorbar(width=.1, aes(ymin=prop.time-se, ymax=prop.time+se))+
theme_linedraw()+
scale_x_discrete(labels=wrap_format(10))+
xlab("colony groups")+
scale_colour_discrete(name="foraging")+#values=c("#999900", "#CC9933"),
facet_wrap(~seasons, scales = "free")+
ylab("proportion of time foraging")+
theme(legend.position = "none",
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 24),
axis.title.y = element_text(size = 24),
strip.text = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.background = element_rect(fill = "white"))
inout_plot
# summary table of proportion of time of foraging by sex
sum_forg_sex <-  summarySE(foraging_in_out, measurevar="prop.time", groupvars=c("year_cave.x","position", "sex"))
#convert cave_group a factor with specific labels
sum_forg_sex$cave_group_f <- factor(sum_forg_sex$year_cave.x, levels = c("2016_lagruta", "2022_lagruta_Feb", "2022_lagruta_Mar", "2022_ajcave","2022_muddycave",  "2023_lagruta", "2023_ajcave"), labels=c("colony 1 2016",  "colony 1 early 2022 ", "colony 1 late 2022","colony 2 2022", "colony 3 2022", "colony 1 2023", "colony 2 2023"))
# plot time of foraging inside and outside the island
propsex_plot <- ggplot(data=sum_forg_sex, aes(x=cave_group_f, y=prop.time, color=position))+
geom_errorbar(width=.1, aes(ymin=prop.time-se, ymax=prop.time+se))+
scale_x_discrete(labels=wrap_format(10))+
scale_colour_discrete(name="foraging")+
xlab("colony groups")+
facet_wrap(~sex, scales = "free")+
ylab("proportion of time foraging")+
theme_linedraw()+
theme(legend.position = "none",
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
strip.text = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.background = element_rect(fill = "white"))
propsex_plot
library(patchwork)
# Figure S1
((inout_plot/ propsex_plot) + plot_layout(axis_titles = "collect") +  plot_annotation(tag_levels = "A") & theme(plot.tag  = element_text(face = 'bold', size=24), axis.title = element_text(face = 'bold', size=24), axis.title.x = element_text(size = 24), axis.title.y=element_text(size=24), legend.title = element_text(size=18), legend.text = element_text(size=15)))
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/FigS1.pdf",  dpi=300)
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/FigS1.pdf", width=7, height = 10, dpi=300)
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/FigS1.pdf", width=8, height = 10, dpi=300)
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/FigS1.pdf", width=15, height = 10, dpi=300)
ggsave(file="~/ownCloud/PhDLife/P.hastatus/2021-10-Camila-secondseason/Analysis/Manuscript/figures/FigS1.pdf", width=15, height = 15, dpi=300)
